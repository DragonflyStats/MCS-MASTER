<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0069)http://www.stat.washington.edu/lstan/Courses/stat502_2007/lab111307.R -->
<HTML><HEAD>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 6.00.2900.3243" name=GENERATOR></HEAD>
<BODY><PRE>ginverse &lt;- function(M){
	if(nrow(M) &lt; ncol(M)) t(ginv(t(M)))
	else solve(crossprod(M), t(M))
}

#####################################
#	BP data READ IN DATA, EDA 	#
#####################################
data.bp&lt;-read.table("bp.txt", header=TRUE, sep=" ")

data.bp$group&lt;-as.factor(data.bp$group)
class(data.bp$group)
summary(data.bp)

par(mfrow=c(1,3), pty='s')
hist(data.bp$score, prob=T, xlab="Score", main="")
plot(data.bp$group, data.bp$score, xlab="Group No", ylab="Score", pch=19)
boxplot(score ~ group, data=data.bp, ylab="Score",names=c("Group 1", "Group 2","Group 3","Group 4"))


#########################
#	Transform Data	#
#########################

samp.mean&lt;-tapply(data.bp$score,data.bp$group,mean)
samp.sd&lt;-tapply(data.bp$score,data.bp$group,sd)
log.sd&lt;-log(samp.sd)
log.mean&lt;-log(samp.mean)

par(mfrow=c(1,2), pty='s')
plot(log.sd~log.mean, pch=19)
abline(lm(log.sd~log.mean), lwd=1)

library(MASS)
mod.lm&lt;-lm(score~ group, data=data.bp)
boxcox(mod.lm)


lm(log.sd~log.mean)
score.transform&lt;-log(data.bp$score)
data.bp&lt;-cbind(data.bp, score.transform)
data.bp[1:10,]

###############################
#	EDA: transformed data	#
###############################

par(mfrow=c(1,3), pty='s')
hist(data.bp$score.transform, prob=T, xlab="Score")
plot(data.bp$group, data.bp$score.transform, pch=19, xlab="Group No", ylab="Score")
boxplot(score.transform ~ group, data=data.bp, ylab="Score",
	names=c("Group 1", "Group 2","Group 3","Group 4"))

###########################################
#	Model Interpretation, Contrasts	#
###########################################

mod.lm1&lt;-lm(score.transform ~ group, data=data.bp)
model.matrix(mod.lm1)
summary(mod.lm1)

contrasts(data.bp$group)
contr.treatment(4)		# default in R; contrasts each level vs base level (base=1st by default)
crossprod(cT) 			# orthonormal

boxplot(score ~ group, data=data.bp, ylab="Score",names=c("Group 1", "Group 2","Group 3","Group 4"))

#Change a base level from Group 1 to Group 4, i.e. compare 1vs 4, 2 vs 4, 3 vs 4
contrasts(data.bp$group)&lt;- contr.treatment(n=4,base=4)
contrasts(data.bp$group) 

mod.lm2&lt;-lm(score.transform ~ group, data=data.bp)
model.matrix(mod.lm2)

summary(mod.lm2)

#compare to 
summary(mod.lm1)

#########################
#	Other Contrasts	#
#########################

cH &lt;- contr.helmert(4)		# contrast 2nd vs 1st, 3rd vs ave(1st,2nd), etc
cH
apply(cH, 2,sum) 			# column sum to 0
crossprod(cH) 			# diagonal: columns are orthogonal
fractions(ginv(cH))

cP &lt;- contr.poly(4) 		# Contrasts based on orthogonal polynomials: Linear, Quadratic, Cubic
cP
zapsmall(crossprod(cP), dig=4)# orthonormal 

cS&lt;-contr.sum(4)			# sum to zero contrasts c4=-c1-c2-c3, c1+c2+c3+c4=0;
cS
apply(cS, 2,sum) 			# column sum to 0
fractions(ginv(cS))


###############################
#	Example: sum to zero	#
###############################

contrasts(data.bp$group) &lt;- contr.sum(n=4)	
contrasts(data.bp$group)

mod.lm3&lt;-lm(score.transform ~ group, data=data.bp)
model.matrix(mod.lm3)
summary(mod.lm3)

contrasts(data.bp$group)
fractions(ginv(contrasts(data.bp$group)))

group.means&lt;-tapply(data.bp$score.transform, data.bp$group, mean)
mean(data.bp$score.transform)
group.means-mean(data.bp$score.transform)
-sum(group.means[1:3]-mean(data.bp$score.transform))
group.means-group.means[4]


#########################
#	Example: Helmert	#
#########################

contrasts(data.bp$group) &lt;- contr.helmert(n=4)	
contrasts(data.bp$group)

mod.lm4&lt;-lm(score.transform ~ group, data=data.bp)
model.matrix(mod.lm4)
summary(mod.lm4)

contrasts(data.bp$group)
fractions(ginv(contrasts(data.bp$group)))

group.means&lt;-tapply(data.bp$score.transform, data.bp$group, mean)
score.mean&lt;-mean(data.bp$score.transform)

score.mean							#intercept
(group.means[2]-group.means[1])/2			#group1 coeff: (mu2-mu1)/2
(group.means[3]-mean(group.means[1:2]))/3		#group2 coeff: (mu3-(mu1+mu2)/2)/3
(group.means[4]-mean(group.means[1:3]))/4		#group4 coeff: (mu4-(mu1+mu2+mu3)/3)/4


c.hat&lt;-group.means %*%contrasts(data.bp$group)	# contrast estimates
dimnames(c.hat )[[2]]&lt;-c("mu2-mu1", "2*mu3-(mu+mu2)", "3*mu4-(mu1+mu2+mu3)")
print(c.hat, digits=5)

print(mod.lm4$coef[2:4]*c(2,2*3,3*4)



#####################################
#	Example: Custom contrast	#
#####################################

M &lt;- rbind(c(1, -1, 0, 0), c(0, 1, 0, -1), c(1/3,1/3,1/3,-1))
Cmat &lt;- ginverse(M)
fractions(Cmat)
dimnames(Cmat) &lt;- list(NULL, c('l vs 2', '2 vs 4', '1 2 3 vs 4')) # optional
contrasts(data.bp$group) &lt;- Cmat

mod.lm5&lt;-lm(score.transform ~ group, data=data.bp)
fractions(model.matrix(mod.lm5))

summary(mod.lm5)

score.mean	
group.means[1]-group.means[2]
group.means[2]-group.means[4]
mean(group.means[1:3])-group.means[4]

# options(contrasts=c())
	# the default 'contrasts' used in model.
	# A character vector of length two, the
	# first giving the function to be used with unordered factors
	# and the second the function to be used with ordered factors.


#################################################################################
#	Data 2: 60 guinea pigs were randomly assigned 
#	to treatment combinations with different doses (0.5, 1, 2mg)
#	and delivery methods (orange juice or ascorbic acid)of Vitamin C.  
#	The response is the length of odontoblasts (teeth). 
#	Six different treatment combinations, and 10 guinea pigs assigned to each. 
#################################################################################

data(ToothGrowth)
ToothGrowth[1:10,]
summary(ToothGrowth)


#############
#	EDA	#
#############
par(mfrow=c(2,2), pty='s')
plot(len~dose + supp, data=ToothGrowth, pch=19)
interaction.plot(ToothGrowth$dose,ToothGrowth$supp,ToothGrowth$len, xlab="Dose", ylab="Length")
interaction.plot(ToothGrowth$supp,ToothGrowth$dose,ToothGrowth$len, xlab="Delivery Method", ylab="Length")

#########################
#	Model Fit		#
#########################

mod.lm &lt;- lm(len~supp*dose,data=ToothGrowth)

par(mfrow=c(1,2), pty='s')
qqnorm(mod.lm$res, pch=19)
qqline(mod.lm$res)

plot(mod.lm$fitted,mod.lm$res,xlab="Fitted",ylab="Residuals", pch=19)
abline(h=0)

anova(mod.lm)
summary(mod.lm)

</PRE></BODY></HTML>
