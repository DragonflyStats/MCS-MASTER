<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0069)http://www.stat.washington.edu/lstan/Courses/stat502_2007/lab103007.R -->
<HTML><HEAD>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content="MSHTML 6.00.2900.3243" name=GENERATOR></HEAD>
<BODY><PRE>###############################
#	Box-Cox transformation	#
###############################

par(mfrow=c(2,2))
slope.est&lt;-NULL
mean.vec&lt;-seq(1,11, by=2)
#mean.vec&lt;-seq(1,5, by=2)

for (n in c(300, 100, 50, 10)){
	data.vec&lt;-NULL
	group.vec&lt;-NULL

	for (i in 1:length(mean.vec)){
		y&lt;-rnorm(n,mean.vec[i], sqrt(mean.vec[i]))
#		y&lt;-rnorm(n,mean.vec[i], jitter(sqrt(mean.vec[i])))
		group.vec&lt;-c(group.vec, rep(i,n))
		data.vec&lt;-c(data.vec, y)
	}

	samp.mean&lt;-tapply(data.vec,group.vec,mean)
	samp.sd&lt;-tapply(data.vec,group.vec,sd)
	log.sd&lt;-log(samp.sd)
	log.mean&lt;-log(samp.mean)

	plot(log.sd~log.mean, main=paste("n = ", n), col="orangered", pch=19)
	abline(lm(log.sd~log.mean))

	slope.est&lt;-c(slope.est, lm(log.sd~log.mean)$coef[2])
}
slope.est



###############################
#	READ IN DATA, EDA 	#
###############################
data.bp&lt;-read.table("bp.txt", header=TRUE, sep=" ")

par(mfrow=c(1,3), pty='s')
hist(data.bp$score, col="orangered", prob=T, xlab="Score", main="")
plot(data.bp$group, data.bp$score, col="orangered", xlab="Group No", ylab="Score", pch=19)
boxplot(score ~ group, data=data.bp, ylab="Score",
	names=c("Group 1", "Group 2","Group 3","Group 4"), col="orangered")


###################
#	Model Fit	#
###################
mod.lm&lt;-lm(score ~ as.factor(group), data=data.bp)
anova(mod.lm)

#########################
#	Diagnostics		#
#########################
par(mfrow=c(1,2), pty='s')	
plot(mod.lm$fitted, mod.lm$resid, xlab="Fitted values", ylab="Residual values", 
	col="orangered", pch=19)
abline(h=0)

qqnorm(mod.lm$resid, col="orangered", pch=19)
qqline(mod.lm$resid)

########	Alternative plotting	##########
#
# beta.hat&lt;-mod.lm$coef
# score.fit&lt;-beta.hat[1]+beta.hat[2]*(x==2)+beta.hat[3]*(x==3)+beta.hat[4]*(x==4)
# score.res&lt;-data.bp$score-score.fit
# qqnorm(score.res)
# qqline(score.fit)
##############################################


#########################
#	Transform Data	#
#########################

samp.mean&lt;-tapply(data.bp$score,data.bp$group,mean)
samp.sd&lt;-tapply(data.bp$score,data.bp$group,sd)
log.sd&lt;-log(samp.sd)
log.mean&lt;-log(samp.mean)

plot(log.sd~log.mean, pch=19, col="orangered")
abline(lm(log.sd~log.mean), lwd=1)

lm(log.sd~log.mean)


#####################################
#	Transform Data:boxcox plot	#
#####################################

boxcox(mod.lm)


###########################################
#	Transform Data, create new vars	#
###########################################

score.transform&lt;-log(data.bp$score)
data.bp&lt;-cbind(data.bp, score.transform)
data.bp[1:10,]



###############################
#	EDA: transformed data	#
###############################

par(mfrow=c(1,3), pty='s')
hist(data.bp$score.transform, col="orangered", prob=T, xlab="Score")
plot(data.bp$group, data.bp$score.transform, col="orangered", pch=19, xlab="Group No", ylab="Score")
boxplot(score.transform ~ group, data=data.bp, ylab="Score",
	names=c("Group 1", "Group 2","Group 3","Group 4"), col="orangered")

#####################################
#	Model Fit: transformed data	#
#####################################

mod.lm&lt;-lm(score.transform ~ as.factor(group), data=data.bp)
anova(mod.lm)

#########################
#	Diagnostics		#
#########################
par(mfrow=c(1,2), pty='s')	
plot(mod.lm$fitted, mod.lm$resid, xlab="Fitted values", ylab="Residual values", 
	pch=19,col="orangered")
abline(h=0)

qqnorm(mod.lm$resid, pch=19,col="orangered")
qqline(mod.lm$resid)



###############################
#	CI for group means	#
###############################

attach(data.bp)
mse&lt;-anova(mod.lm)[[3]][2]
group.means&lt;-c(mean(score.transform[group==1]), mean(score.transform[group==2]), 
mean(score.transform[group==3]), mean(score.transform[group==4]))
me&lt;-qt(.975, 147)*sqrt(mse/50)

ci&lt;-cbind(group.means-me, group.means+me)
dimnames(ci)&lt;-list(c("Group 1", "Group 2", "Group 3", "Group 4"), c("Low", "Up"))
print(ci, digits=3)

print(exp(ci), digits=3)

# ci1 &lt;- c(mean(y[group==1])-qt(.975, 147)*sqrt(mse/50), mean(y[group==1])+qt(.975, 147)*sqrt(mse/50))



</PRE></BODY></HTML>
